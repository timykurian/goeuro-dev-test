package com.goeuro;import com.goeuro.exception.CityException;import com.goeuro.model.CityVO;import com.goeuro.model.GeoPosition;import org.json.JSONArray;import org.json.JSONObject;import java.io.BufferedReader;import java.io.InputStreamReader;import java.net.URL;import java.net.URLConnection;import java.nio.charset.Charset;import java.util.ArrayList;import java.util.List;/** * Created by Timy on 13/09/16. */public class CitySearchService {    private static final String  endUrl = "http://api.goeuro.com/api/v2/position/suggest/en/";    /**     * To search the city details based on the input     *     * @param cityName     * @return     */    public static List<CityVO> searchCityDetails(String cityName) {        List<CityVO> cityVOs = null;         try {            String jsonString = callURL( endUrl + cityName);            JSONArray jsonArray = new JSONArray(jsonString);            if(jsonArray != null && jsonArray.length()>0){                cityVOs = new ArrayList<CityVO>();                int count = jsonArray.length();                for(int i=0 ; i< count; i++){                    JSONObject jsonObject = jsonArray.getJSONObject(i);                    CityVO cityVO = new CityVO();                    cityVO.set_id(jsonObject.get("_id").toString());                    cityVO.setName(jsonObject.get("name").toString());                    cityVO.setType(jsonObject.get("type").toString());                    GeoPosition geoPosition = new GeoPosition();                    if(((JSONObject)jsonObject.get("geo_position")).get("latitude") != null){                        geoPosition.setLatitude((((JSONObject)jsonObject.get("geo_position")).get("latitude").toString()));                    }                    if(((JSONObject)jsonObject.get("geo_position")).get("latitude") != null ){                        geoPosition.setLongitude((((JSONObject)jsonObject.get("geo_position")).get("latitude").toString()));                    }                    cityVO.setGeo_position(geoPosition);                    cityVOs.add(cityVO);                }            }        } catch (Exception e) {            e.printStackTrace();        }        return cityVOs;    }    /**     *     * @param requestUrl     * @return     * @throws CityException     */    public static String callURL(String requestUrl) throws  CityException{        StringBuilder sb = new StringBuilder();        URLConnection urlConn = null;        InputStreamReader in = null;        try {            URL url = new URL(requestUrl);            urlConn = url.openConnection();            if (urlConn != null)                urlConn.setReadTimeout(60 * 1000);            if (urlConn != null && urlConn.getInputStream() != null) {                in = new InputStreamReader(urlConn.getInputStream(), Charset.defaultCharset());                BufferedReader bufferedReader = new BufferedReader(in);                if (bufferedReader != null) {                    int cp;                    while ((cp = bufferedReader.read()) != -1) {                        sb.append((char) cp);                    }                    bufferedReader.close();                }            }            in.close();        } catch (Exception e) {            throw new CityException("Exception while requesting URL:" + requestUrl);        }        return sb.toString();    }}